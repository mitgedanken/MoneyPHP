<?php

namespace mitgedanken\Monetary;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-27 at 12:35:48.
 */
class CurrencyPairTest extends \PHPUnit_Framework_TestCase {

  /**
   * @var CurrencyPair
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp()
  {
    $usd = new Currency('USD');
    $eur = new Currency('EUR');
    $this->object = new CurrencyPair($usd, $eur);
  }

  /**
   * @covers mitgedanken\Monetary\CurrencyPair::has
   * @todo   Implement testHas().
   */
  public function testHas()
  {
    $usd = new Currency('USD');
    $eur = new Currency('EUR');
    $object = new CurrencyPair($usd, $eur);
    $this->assertTrue($this->object->has($usd));
    $this->assertTrue($this->object->has($eur));

    $ppp = new Currency('PPP');
    $this->assertFalse($this->object->has($ppp));
  }

  /**
   * @covers mitgedanken\Monetary\CurrencyPair::equals
   * @todo   Implement testEquals().
   */
  public function testEquals()
  {
    $usd = new Currency('USD');
    $eur = new Currency('EUR');
    $object = new CurrencyPair($usd, $eur);
    $this->assertTrue($this->object->equals($object));

    $object = new CurrencyPair($eur, $usd);
    $this->assertTrue($this->object->equals($object));


    $ppp = new Currency('PPP');
    $object = new CurrencyPair($ppp, $usd);
    $this->assertFalse($this->object->equals($object));

    $object = new CurrencyPair($eur, $ppp);
    $this->assertFalse($this->object->equals($object));
  }
}
